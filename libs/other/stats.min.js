var Stats = function(){ this.fps = 0; var e = 0; var t = document.createElement("div"); function l(e){ return t.appendChild(e.dom), e; }function n(l){ for(var n = 0; n < t.children.length; n++)t.children[n].style.display = n === l ? "block" : "none"; e = l; }t.style.cssText = "position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000", t.addEventListener("click", function(l){ l.preventDefault(), n(++e % t.children.length); }, !1); var a = (performance || Date).now(); var i = a; var o = 0; var f = l(new Stats.Panel("FPS", "#0ff", "#002")); var r = l(new Stats.Panel("MS", "#0f0", "#020")); if(self.performance && self.performance.memory)var s = l(new Stats.Panel("MB", "#f08", "#201")); return n(0), {REVISION:16, dom:t, addPanel:l, showStats:function(){ t.style.display = "block"; }, hideStats:function(){ t.style.display = "none"; }, showPanel:n, begin:function(){ a = (performance || Date).now(); }, end:function(){ o++; var e = (performance || Date).now(); if(r.update(e - a, 200), e > i + 3e3 && (this.fps = 1e3 * o / (e - i), f.update(this.fps, 100), i = e, o = 0, s)){ var t = performance.memory; s.update(t.usedJSHeapSize / 1048576, t.jsHeapSizeLimit / 1048576); }return e; }, update:function(){ a = this.end(); }, domElement:t, setMode:n}; }; Stats.Panel = function(e, t, l){ var n = 1 / 0; var a = 0; var i = Math.round; var o = i(window.devicePixelRatio || 1); var f = 80 * o; var r = 48 * o; var s = 3 * o; var c = 2 * o; var d = 3 * o; var p = 15 * o; var u = 74 * o; var h = 30 * o; var m = document.createElement("canvas"); m.width = f, m.height = r, m.style.cssText = "width:80px;height:48px"; var S = m.getContext("2d"); return S.font = "bold " + 9 * o + "px Helvetica,Arial,sans-serif", S.textBaseline = "top", S.fillStyle = l, S.fillRect(0, 0, f, r), S.fillStyle = t, S.fillText(e, s, c), S.fillRect(d, p, u, h), S.fillStyle = l, S.globalAlpha = 0.9, S.fillRect(d, p, u, h), {dom:m, update:function(r, y){ n = Math.min(n, r), a = Math.max(a, r), S.fillStyle = l, S.globalAlpha = 1, S.fillRect(0, 0, f, p), S.fillStyle = t, S.fillText(i(r) + " " + e + " (" + i(n) + "-" + i(a) + ")", s, c), S.drawImage(m, d + o, p, u - o, h, d, p, u - o, h), S.fillRect(d + u - o, p, o, h), S.fillStyle = l, S.globalAlpha = 0.9, S.fillRect(d + u - o, p, o, i((1 - r / y) * h)); }}; }, typeof module === "object" && (module.exports = Stats);